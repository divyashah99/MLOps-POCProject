name: MLOps CI/CD

on:
  push:
    branches:
      - main
  
  workflow_dispatch: # Run manually

jobs:
  setup-and-upload:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Code
      uses: actions/checkout@v3

    - name: Set up Python
      uses: actions/setup-python@v4
      with:
        python-version: '3.9.13'
    
    - name: Get cache dir 
      id: pip-cache-dir
      run: echo "dir=$(pip cache dir)" >> $GITHUB_OUTPUT
      
    - name: Cache pip dependencies
      uses: actions/cache@v4
      with:
        path: ${{ steps.pip-cache-dir.outputs.dir}}
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
        restore-keys: |
          ${{ runner.os }}-pip-

    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt

    - name: Authenticate with GCP
      uses: google-github-actions/auth@v2
      with:
        credentials_json: '${{ secrets.GCP_KEY_JSON }}'

    - name: Set GCP Project ID
      run: gcloud config set project ${{ secrets.GCP_PROJECT_ID }}

    - name: Create GCR Repository (if not exists)
      run: |
        if [[ $(gcloud artifacts repositories list --location=us-central1 | grep "mlops-training") == "" ]]; then
          gcloud artifacts repositories create mlops-training --repository-format=docker --location=us-central1
        fi


    - name: Build and Push Docker Image
      run: |
        docker build -f docker/Dockerfile -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/mlops-training:latest .
        docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/mlops-training:latest


    - name: Run Data Pipeline
      run: |
        python scripts/setup_gcloud.py
        python scripts/download_data.py
        python scripts/upload_to_bucket.py

  training:
      runs-on: ubuntu-latest

      steps:
      - name: Checkout Code
        uses: actions/checkout@v3

      - name: Authenticate with GCP
        uses: google-github-actions/auth@v2
        with:
          credentials_json: '${{ secrets.GCP_KEY_JSON }}'


      - name: Submit Training Job
        run: |
          gcloud ai custom-jobs create \
            --region=us-central1 \
            --display-name=mlops-training-job \
            --worker-pool-spec=machine-type=n1-standard-4,replica-count=1,container-image-uri=gcr.io/${{ secrets.GCP_PROJECT_ID }}/mlops-training:latest
